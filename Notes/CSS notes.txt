**********CSS ZEN GARDEN*******************
Similar to materialize css 


1)General rule of css:

selector {
	property: value;
	anotherProperty: value;
}


for eg: 



making all h1's purple and 56px font:

h1 {
  color: purple;
  font-size: 56px;
}




giving all img's a 3px red border:

img {
  border-color: red;
  border-width: 3px;
}






******HOW TO WRITE CSS**************

We can write them inline but that's a bad idea as it makes the code complex.

For eg:

<h1 style="color: purple;">Hello</h1>




The efficient way is to use the 
<style> tag. It helps in separating our html from our css.

syntax: 



<style type="text/css">
	li {
	    color: red;
	}
</style>

*The <style> tag goes in the head div



In order to separate out our HTML and CSS codes, we use a link tag.
We write our CSS in a totally separate file and link it using the
<link> tag (similar to anchor <a> tag in HTML)





*************CSS COLOURS***************************

important website:   colours.neilorangepeel.com


in CSS we use hexadecimal numbers for our colours, 
# + string of 6 hexadecimal characters from 0-F


For colours in CSS use a colour picker.



1)The other colour system we use in CSS is RGB
syntax:

color: rgb(0,255,0);


2)The other colour system is rgba , the a stands for alpha
i.e, transparency and has 4 channels instead of 3. 
Alpha(transparency) channel ranges from 0 to 1.




***************BACKGROUND COLOR*********************
In order to get a background colour you put it in as:

body {
      background: #345a24;
}


In order to put an image as our background , we use the url property

url (https://xyz.png);

but most of the times our image is not big enough so the pattern is repeated and our image gets tiled, in order to avoid that we can use another property called:

background-repeat: no-repeat;



2)A border in CSS has 3 things:
width , colour and style.

You need to have all three for a border to work 

the shortcut syntax is:  


border: 5px solid purple;


***************CSS SELECTORS******************8

There are 3 basic CSS selectors ,

element, id and class.


3)In order to change the color of a particular element, we alter our HTML code slightly. 

We specify the id of the element and set a value to it and then in our CSS file we take the id as the selector by using a # symbol

syntax: 

#special {
    	   color: yellow;
}


Instead of giving separate IDs we can instead create a class and that will group all the elements under that class and do changes on them.



syntax in CSS:


.class_name: value;




*************IMP SELECTORS******************

The 5 important selectors in CSS are:

Star, Descendant selector, adjacent selector, attribute selector, nth of type



1)Star selector
* {
	color: red;
}

selects everything on the page and applies the changes to all the elements



2)Descendant selector

This selector selects everything that is the descendant of a particular tag.For eg: if we were to select the anchor tags that are only a part of li then the syntax would be:

li a{
	color: red;
}



3)Attribute selector simply selects an attribute of a given tag and then styles it according to the user. If we have to style the input text of the user then the syntax would look like:

input [type="text"] {
 			border: 2px solid grey;
}





4)nth of type syntax:

li:nth-of-type(odd/even/any number)  {
					color: red;
}





***************INHERITANCE AND SPECIFICITY***********************


The basic concept is that if we set a property on a parent , it can also affect the child.



Specificity mei jo <style> tag ke under aapka last code hai , wohi aapke webpage pe aega. 

for eg:


if in our code theres  a ul and there's an li then:


<style type="text/css">
ul {
	color: red;
}

li {
	color: blue;
}

</style>



Then as a result our page will implement the changes under <li> tag and no changes would be made to the <ul> tag and it's data elements.


*****************HOW DOES SPECIFICITY WORK?********************

It performs calculations and assings numeric values and accordingly it determines who will win the specificity race.

There's a specificity calculator that tells us that 

1)Inline styles - Max preference (
2)IDs - 2nd preference
3)Classes,Pseudo-class selectors & Attribute selectors - 3rd preference(.class , input[type="text"], pseudo-class= a:hover, input:checked)
4)Elements and pseudo-elements(or type selectors) - Least preference.
(li, li a, li + a).



Important property: :hover 
can change the properties of a tag when the cursor is hovered over.